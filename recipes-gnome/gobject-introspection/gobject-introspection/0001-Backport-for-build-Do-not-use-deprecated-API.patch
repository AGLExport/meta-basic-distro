From 597d595c92794db54d5bb30782ba45e35853630f Mon Sep 17 00:00:00 2001
From: Naoto Yamaguchi <naoto.yamaguchi@aisin.co.jp>
Date: Sat, 10 Sep 2022 21:47:20 +0900
Subject: [PATCH] Backport for build: Do not use deprecated API

https://gitlab.gnome.org/GNOME/gobject-introspection/-/commit/effb1e09dee263cdac4ec593e8caf316e6f01fe2
---
 gir/meson.build   | 24 ++++++++++++------------
 tests/meson.build | 14 +++++++-------
 2 files changed, 19 insertions(+), 19 deletions(-)

diff --git a/gir/meson.build b/gir/meson.build
index d50a513..9e41440 100644
--- a/gir/meson.build
+++ b/gir/meson.build
@@ -108,8 +108,8 @@ glib_command = scanner_command + [
 
 if dep_type == 'pkgconfig'
   glib_command += ['--external-library', '--pkg=glib-2.0']
-  glib_libdir = get_option('pkgconfig-sysroot-path') + glib_dep.get_pkgconfig_variable('libdir')
-  glib_incdir = get_option('pkgconfig-sysroot-path') + join_paths(glib_dep.get_pkgconfig_variable('includedir'), 'glib-2.0')
+  glib_libdir = get_option('pkgconfig-sysroot-path') + glib_dep.get_variable('libdir')
+  glib_incdir = get_option('pkgconfig-sysroot-path') + join_paths(glib_dep.get_variable('includedir'), 'glib-2.0')
   glib_libincdir = join_paths(glib_libdir, 'glib-2.0', 'include')
   glib_files += join_paths(glib_incdir, 'gobject', 'glib-types.h')
   glib_files += join_paths(glib_libincdir, 'glibconfig.h')
@@ -135,10 +135,10 @@ if dep_type == 'pkgconfig'
 elif dep_type == 'internal'
   glib_command += ['--pkg-export=glib-2.0']
   # XXX: Assumes that the builddir layout is 'mirror'
-  glib_libdir = join_paths(meson.build_root(), subprojdir, 'glib', 'glib')
+  glib_libdir = join_paths(meson.project_build_root(), subprojdir, 'glib', 'glib')
   # XXX: Assumes the location of the glib subproject dir
   # We should add API to meson to get a specific file from a specific subproject
-  glibproj_incdir = join_paths(meson.source_root(), subprojdir, 'glib')
+  glibproj_incdir = join_paths(meson.project_source_root(), subprojdir, 'glib')
   glib_incdir = join_paths(glibproj_incdir, 'glib')
   glib_libincdir = glib_libdir
   glib_files += join_paths(glibproj_incdir, 'gobject', 'glib-types.h')
@@ -151,13 +151,13 @@ elif dep_type == 'internal'
   glib_headers = glib_subproject.get_variable('glib_sub_headers')
   glib_files += glib_subproject.get_variable('glib_sources')
   # XXX: Assumes that the builddir layout is 'mirror'
-  gobject_libdir = join_paths(meson.build_root(), subprojdir, 'glib', 'gobject')
-  gmodule_libdir = join_paths(meson.build_root(), subprojdir, 'glib', 'gmodule')
-  gio_libdir = join_paths(meson.build_root(), subprojdir, 'glib', 'gio')
+  gobject_libdir = join_paths(meson.project_build_root(), subprojdir, 'glib', 'gobject')
+  gmodule_libdir = join_paths(meson.project_build_root(), subprojdir, 'glib', 'gmodule')
+  gio_libdir = join_paths(meson.project_build_root(), subprojdir, 'glib', 'gio')
   glib_libpaths = ['-L' + glib_libdir, '-L' + gobject_libdir,
                    '-L' + gmodule_libdir, '-L' + gio_libdir]
   # Includes that will be used to compile the scanner executable
-  glib_buildinc = join_paths(meson.build_root(), subprojdir, 'glib')
+  glib_buildinc = join_paths(meson.project_build_root(), subprojdir, 'glib')
   gmodule_incdir = join_paths(glibproj_incdir, 'gmodule')
   gio_incdir = join_paths(glibproj_incdir, 'gio')
   glib_includes = ['-I' + glibproj_incdir, '-I' + glib_incdir, '-I' + glib_libincdir,
@@ -165,13 +165,13 @@ elif dep_type == 'internal'
   # XXX: We need include paths to all glib dependencies too. We assume that the
   # dependencies are only libffi and proxy-libintl, and that they are used as
   # subprojects. In the worst case we add paths to non-existent directories.
-  ffi_incdir = join_paths(meson.build_root(), subprojdir, 'libffi', 'include')
+  ffi_incdir = join_paths(meson.project_build_root(), subprojdir, 'libffi', 'include')
   glib_includes += ['-I' + ffi_incdir]
-  intl_incdir = join_paths(meson.source_root(), subprojdir, 'proxy-libintl')
+  intl_incdir = join_paths(meson.project_source_root(), subprojdir, 'proxy-libintl')
   glib_includes += ['-I' + intl_incdir]
 
-  ffi_libdir = join_paths(meson.build_root(), subprojdir, 'libffi', 'src')
-  intl_libdir = join_paths(meson.build_root(), subprojdir, 'proxy-libintl')
+  ffi_libdir = join_paths(meson.project_build_root(), subprojdir, 'libffi', 'src')
+  intl_libdir = join_paths(meson.project_build_root(), subprojdir, 'proxy-libintl')
   glib_libpaths = ['-L' + ffi_libdir, '-L' + intl_libdir] + glib_libpaths
 
   glib_command += glib_libpaths
diff --git a/tests/meson.build b/tests/meson.build
index 369abac..54c0afe 100644
--- a/tests/meson.build
+++ b/tests/meson.build
@@ -1,4 +1,4 @@
-sub_build_root = join_paths(meson.build_root(), 'subprojects')
+sub_build_root = join_paths(meson.project_build_root(), 'subprojects')
 test_env_common_path = []
 if glib_dep.type_name() == 'internal' and host_system == 'windows'
   test_env_common_path += [
@@ -13,7 +13,7 @@ endif
 if libffi_dep.type_name() == 'internal' and host_system == 'windows'
   test_env_common_path += [join_paths(sub_build_root, 'libffi',  'src')]
 endif
-test_env_common_pypath = [meson.build_root()]
+test_env_common_pypath = [meson.project_build_root()]
 
 
 test_regress_sources = files('scanner/regress.c')
@@ -115,8 +115,8 @@ if glib_dep.type_name() == 'pkgconfig'
       '--output=@OUTPUT@',
       '--no-libtool',
       '--reparse-validate',
-      '--add-include-path', join_paths(meson.source_root(), 'gir'),
-      '--add-include-path', join_paths(meson.build_root(), 'gir'),
+      '--add-include-path', join_paths(meson.project_source_root(), 'gir'),
+      '--add-include-path', join_paths(meson.project_build_root(), 'gir'),
       '--warn-all',
       '--warn-error',
       '--namespace=Everything',
@@ -140,8 +140,8 @@ if glib_dep.type_name() == 'pkgconfig'
       '--output=@OUTPUT@',
       '--no-libtool',
       '--reparse-validate',
-      '--add-include-path', join_paths(meson.source_root(), 'gir'),
-      '--add-include-path', join_paths(meson.build_root(), 'gir'),
+      '--add-include-path', join_paths(meson.project_source_root(), 'gir'),
+      '--add-include-path', join_paths(meson.project_build_root(), 'gir'),
       '--warn-all',
       '--warn-error',
       '--namespace=GIMarshallingTests',
@@ -161,7 +161,7 @@ if glib_dep.type_name() == 'pkgconfig'
       output: '@BASENAME@.typelib',
       depends: [gobject_gir, ],
       command: [gircompiler, '-o', '@OUTPUT@', '@INPUT@',
-                '--includedir', join_paths(meson.build_root(), 'gir'),
+                '--includedir', join_paths(meson.project_build_root(), 'gir'),
                 '--includedir', meson.current_build_dir()
       ],
     )
-- 
2.25.1

